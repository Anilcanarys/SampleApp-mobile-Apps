# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: ['master']

pool:
  vmImage: 'ubuntu-latest'
steps:
- task: TriggerBuild@3
  inputs:
    definitionIsInCurrentTeamProject: true
    buildDefinition: 'App Build CI'
    queueBuildForUserThatTriggeredBuild: true
    ignoreSslCertificateErrors: true
    useSameSourceVersion: false
    useCustomSourceVersion: false
    useSameBranch: true
    waitForQueuedBuildsToFinish: true
    waitForQueuedBuildsToFinishRefreshTime: '10'
    failTaskIfBuildsNotSuccessful: true
    cancelBuildsIfAnyFails: false
    treatPartiallySucceededBuildAsSuccessful: false
    downloadBuildArtifacts: false
    storeInEnvironmentVariable: false
    authenticationMethod: 'OAuth Token'
    password: '$(System.AccessToken)'
    enableBuildInQueueCondition: false
    dependentOnSuccessfulBuildCondition: false
    dependentOnFailedBuildCondition: false
    checkbuildsoncurrentbranch: false
    failTaskIfConditionsAreNotFulfilled: false

- script: |
    echo "$TriggeredBuildIds"
    echo "$TRIGGEREDBUILDIDS"
    cd $(Build.BinariesDirectory) && ls -lt

- powershell: write "$($env:TriggeredBuildIds)"

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: 'Ionic App'
    definition: 'App Build CI'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'specific'
    pipelineId: '$($env:TriggeredBuildIds)'
    artifactName: 'drop'
    targetPath: '$(Build.BinariesDirectory)'

- task: ExtractFiles@1
  inputs:
    cleanDestinationFolder: false
    destinationFolder: $(Build.BinariesDirectory)
    archiveFilePatterns: $(Build.BinariesDirectory)/*.zip